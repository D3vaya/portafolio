---
---

<div id="particles-container"></div>

<script>
  class FloatingParticles {
    private container: HTMLElement;
    private particles: Array<HTMLElement> = [];
    private particleCount = 50;

    constructor() {
      this.container = document.getElementById('particles-container')!;
      if (this.container) {
        this.init();
      }
    }

    init() {
      for (let i = 0; i < this.particleCount; i++) {
        this.createParticle();
      }
    }

    createParticle() {
      const particle = document.createElement('div');
      particle.className = 'floating-particle';
      
      // Random position
      particle.style.left = Math.random() * 100 + '%';
      particle.style.top = Math.random() * 100 + '%';
      
      // Random size
      const size = Math.random() * 4 + 1;
      particle.style.width = size + 'px';
      particle.style.height = size + 'px';
      
      // Random animation duration and delay
      const duration = Math.random() * 20 + 10;
      const delay = Math.random() * 5;
      
      particle.style.animationDuration = duration + 's';
      particle.style.animationDelay = delay + 's';
      
      // Random color from our cyberpunk palette
      const colors = ['#00ff9f', '#ff006f', '#ffffff', '#00d4ff'];
      particle.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
      
      this.container.appendChild(particle);
      this.particles.push(particle);
      
      // Add mouse interaction
      particle.addEventListener('mouseenter', () => {
        particle.style.transform = 'scale(3)';
        particle.style.boxShadow = `0 0 20px ${particle.style.backgroundColor}`;
      });
      
      particle.addEventListener('mouseleave', () => {
        particle.style.transform = 'scale(1)';
        particle.style.boxShadow = 'none';
      });
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    new FloatingParticles();
  });
</script>

<style>
  #particles-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    pointer-events: none;
    z-index: -5;
  }

  .floating-particle {
    position: absolute;
    border-radius: 50%;
    opacity: 0.6;
    animation: float linear infinite;
    pointer-events: auto;
    transition: all 0.3s ease;
  }

  @keyframes float {
    0% {
      transform: translateY(100vh) translateX(0px) rotate(0deg);
      opacity: 0;
    }
    10% {
      opacity: 0.6;
    }
    90% {
      opacity: 0.6;
    }
    100% {
      transform: translateY(-100px) translateX(100px) rotate(360deg);
      opacity: 0;
    }
  }

  /* Alternative floating patterns */
  .floating-particle:nth-child(odd) {
    animation-name: floatReverse;
  }

  @keyframes floatReverse {
    0% {
      transform: translateY(-100px) translateX(100px) rotate(360deg);
      opacity: 0;
    }
    10% {
      opacity: 0.4;
    }
    90% {
      opacity: 0.4;
    }
    100% {
      transform: translateY(100vh) translateX(-100px) rotate(0deg);
      opacity: 0;
    }
  }

  .floating-particle:nth-child(3n) {
    animation-name: floatDiagonal;
  }

  @keyframes floatDiagonal {
    0% {
      transform: translateY(100vh) translateX(-50px) rotate(0deg);
      opacity: 0;
    }
    50% {
      opacity: 0.8;
      transform: translateY(50vh) translateX(50px) rotate(180deg);
    }
    100% {
      transform: translateY(-100px) translateX(150px) rotate(360deg);
      opacity: 0;
    }
  }
</style>